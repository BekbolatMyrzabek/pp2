
#Примечание. Python не имеет встроенной поддержки массивов, но вместо них можно использовать списки Python .

#Массивы
#Примечание. На этой странице показано, как использовать СПИСКИ как Массивы,
#  однако для работы с массивами в Python вам придется импортировать библиотеку, 
# например библиотеку NumPy .#
#Массивы используются для хранения нескольких значений в одной переменной:
#Создайте массив, содержащий названия автомобилей:

cars = ["Ford", "Volvo", "BMW"]


#Что такое массив?
#Массив - это специальная переменная, которая может содержать более одного значения одновременно.
#Если у вас есть список элементов (например, список названий автомобилей), хранение автомобилей в отдельных переменных может выглядеть следующим образом:

'''
car1 = "Ford"
car2 = "Volvo"
car3 = "BMW"
'''

#Однако что, если вы хотите просмотреть машины и найти конкретную? А если бы у вас было не 3 машины, а 300?
#Решение - массив!
#Массив может содержать много значений под одним именем, и вы можете получить доступ к значениям, указав номер индекса.

#Доступ к элементам массива
#Вы обращаетесь к элементу массива, ссылаясь на номер индекса .
#Получите значение первого элемента массива:
'''
x = cars[0]
'''

#Длина массива
#Используйте этот len()метод, чтобы вернуть длину массива (количество элементов в массиве).
#Вернуть количество элементов в cars массиве:
'''
x = len(cars)
'''
#Примечание . Длина массива всегда на единицу больше, чем самый высокий индекс массива.

for x in cars:
  print(x)